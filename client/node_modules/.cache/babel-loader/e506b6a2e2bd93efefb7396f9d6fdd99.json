{"ast":null,"code":"import _toConsumableArray from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Quill from 'quill';\nimport { BaseContentDiv } from '../../shared/ContentDiv';\nimport { Button } from '../../shared/Button';\nimport { getJournal, updateJournal } from '../../../actions';\nimport colors from '../../shared/colors';\nimport editor from '../../../apis/editor';\nimport { GridDiv, JournalDiv, EditorDiv, PostButton, EntriesDiv } from './styles';\n\nvar JournalShow = /*#__PURE__*/function (_React$Component) {\n  _inherits(JournalShow, _React$Component);\n\n  function JournalShow(props) {\n    var _this;\n\n    _classCallCheck(this, JournalShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JournalShow).call(this, props));\n\n    _this.onPostClick = function () {\n      var journal = _this.props.journal;\n\n      _this.props.updateJournal(journal._id, {\n        entries: [].concat(_toConsumableArray(journal.entries), [{\n          date: _this.date.toDateString(),\n          content: _this.editor.getContents()\n        }])\n      });\n    };\n\n    _this.onEntryClick = function (index) {};\n\n    _this.editor = null;\n    _this.date = new Date();\n    return _this;\n  }\n\n  _createClass(JournalShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getJournal(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.addEditor();\n    }\n  }, {\n    key: \"addEditor\",\n    value: function addEditor() {\n      if (!this.editor) {\n        this.editorRoot = document.querySelector('#editor');\n        this.editor = editor(this.editorRoot);\n        this.editor.setText(\"\".concat(this.props.journal.title, \"\\n\").concat(this.date.toLocaleDateString(), \"\\n\").concat(this.date.toLocaleTimeString()));\n      }\n    }\n  }, {\n    key: \"renderEntries\",\n    value: function renderEntries() {\n      var _this2 = this;\n\n      if (!this.props.journal) {\n        return null;\n      }\n\n      return this.props.journal.entries.map(function (entry, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 5\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"\",\n          onClick: function onClick() {\n            return _this2.onEntryClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 6\n          }\n        }, entry.date));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.journal) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(GridDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(EntriesDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }\n      }, \"Entries\"), this.renderEntries()), /*#__PURE__*/React.createElement(JournalDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(EditorDiv, {\n        id: \"editor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(PostButton, {\n        onClick: this.onPostClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }\n      }, \"Post\")));\n    }\n  }]);\n\n  return JournalShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    journal: state.journals[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJournal: getJournal,\n  updateJournal: updateJournal\n})(JournalShow);","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js"],"names":["React","connect","styled","Quill","BaseContentDiv","Button","getJournal","updateJournal","colors","editor","GridDiv","JournalDiv","EditorDiv","PostButton","EntriesDiv","JournalShow","props","onPostClick","journal","_id","entries","date","toDateString","content","getContents","onEntryClick","index","Date","match","params","id","addEditor","editorRoot","document","querySelector","setText","title","toLocaleDateString","toLocaleTimeString","map","entry","renderEntries","Component","mapStateToProps","state","ownProps","journals"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Quill from 'quill';\nimport { BaseContentDiv } from '../../shared/ContentDiv';\nimport { Button } from '../../shared/Button';\nimport { getJournal, updateJournal } from '../../../actions';\nimport colors from '../../shared/colors';\nimport editor from '../../../apis/editor';\nimport {\n\tGridDiv,\n\tJournalDiv,\n\tEditorDiv,\n\tPostButton,\n\tEntriesDiv\n} from './styles';\n\nclass JournalShow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.editor = null;\n\t\tthis.date = new Date();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getJournal(this.props.match.params.id);\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.addEditor();\n\t}\n\n\taddEditor() {\n\t\tif (!this.editor) {\n\t\t\tthis.editorRoot = document.querySelector('#editor');\n\t\t\tthis.editor = editor(this.editorRoot);\n\n\t\t\tthis.editor.setText(\n\t\t\t\t`${this.props.journal\n\t\t\t\t\t.title}\\n${this.date.toLocaleDateString()}\\n${this.date.toLocaleTimeString()}`\n\t\t\t);\n\t\t}\n\t}\n\n\tonPostClick = () => {\n\t\tconst { journal } = this.props;\n\t\tthis.props.updateJournal(journal._id, {\n\t\t\tentries : [\n\t\t\t\t...journal.entries,\n\t\t\t\t{\n\t\t\t\t\tdate    : this.date.toDateString(),\n\t\t\t\t\tcontent : this.editor.getContents()\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t};\n\n\tonEntryClick = (index) => {};\n\n\trenderEntries() {\n\t\tif (!this.props.journal) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this.props.journal.entries.map((entry, index) => {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<a href=\"\" onClick={() => this.onEntryClick(index)}>\n\t\t\t\t\t\t{entry.date}\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\n\trender() {\n\t\tif (!this.props.journal) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<GridDiv>\n\t\t\t\t<EntriesDiv>\n\t\t\t\t\t<h3>Entries</h3>\n\t\t\t\t\t{this.renderEntries()}\n\t\t\t\t</EntriesDiv>\n\t\t\t\t<JournalDiv>\n\t\t\t\t\t<EditorDiv id=\"editor\" />\n\t\t\t\t\t<PostButton onClick={this.onPostClick}>Post</PostButton>\n\t\t\t\t</JournalDiv>\n\t\t\t</GridDiv>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { journal: state.journals[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { getJournal, updateJournal })(\n\tJournalShow\n);\n"]},"metadata":{},"sourceType":"module"}