{"ast":null,"code":"import { CREATE_JOURNAL, GET_JOURNAL, GET_JOURNALS, DELETE_JOURNAL, UPDATE_JOURNAL, SIGN_IN, SIGN_OUT, TOGGLE_DARKMODE, GET_SETTINGS, SAVE_SETTINGS } from './types';\nimport history from '../history';\nimport journals from '@apis/journals';\nimport axios from 'axios';\nexport const signIn = userInformation => async dispatch => {\n  return {\n    type: SIGN_IN,\n    payload: userInformation\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createJournal = formInput => async (dispatch, getState) => {\n  const userId = getState().user.googleId;\n  const date = new Date().toLocaleString();\n  const {\n    data\n  } = await journals.post('/journals', { ...formInput,\n    userId,\n    date,\n    entries: []\n  });\n  dispatch({\n    type: CREATE_JOURNAL,\n    payload: data\n  });\n  history.push('/');\n};\nexport const getJournals = () => async dispatch => {\n  const {\n    data\n  } = await journals.get('/journals');\n  console.log(data);\n  dispatch({\n    type: GET_JOURNALS,\n    payload: data\n  });\n};\nexport const getJournal = journalId => async dispatch => {\n  const {\n    data\n  } = await journals.get(`/journals/${journalId}`);\n  dispatch({\n    type: GET_JOURNAL,\n    payload: data\n  });\n};\nexport const deleteJournal = journalId => async dispatch => {\n  await journals.delete(`/journals/${journalId}`);\n  dispatch({\n    type: DELETE_JOURNAL,\n    payload: journalId\n  });\n  history.push('/');\n};\nexport const updateJournal = (journalId, journal) => async dispatch => {\n  console.log('values', journal);\n  const {\n    data\n  } = await journals.patch(`/journals/${journalId}`, journal);\n  console.log('data: ', data);\n  dispatch({\n    type: UPDATE_JOURNAL,\n    payload: data.value\n  });\n  history.push(`/journals/${journalId}`);\n};\nexport const toggleDarkMode = mode => {\n  return {\n    type: TOGGLE_DARKMODE,\n    payload: mode\n  };\n};\nexport const getSettings = () => async (dispatch, getState) => {\n  const userId = getState().user.googleId;\n  const {\n    data\n  } = await journals.get(`/settings/${userId}`);\n  dispatch({\n    type: GET_SETTINGS,\n    payload: data.value\n  });\n};\nexport const saveSettings = settings => async (dispatch, getState) => {\n  const userId = getState().user.googleId;\n  const {\n    data\n  } = await journals.put(`/settings/${userId}`, settings);\n  dispatch({\n    type: SAVE_SETTINGS,\n    payload: data.value\n  });\n};","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/actions/index.js"],"names":["CREATE_JOURNAL","GET_JOURNAL","GET_JOURNALS","DELETE_JOURNAL","UPDATE_JOURNAL","SIGN_IN","SIGN_OUT","TOGGLE_DARKMODE","GET_SETTINGS","SAVE_SETTINGS","history","journals","axios","signIn","userInformation","dispatch","type","payload","signOut","createJournal","formInput","getState","userId","user","googleId","date","Date","toLocaleString","data","post","entries","push","getJournals","get","console","log","getJournal","journalId","deleteJournal","delete","updateJournal","journal","patch","value","toggleDarkMode","mode","getSettings","saveSettings","settings","put"],"mappings":"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","sourcesContent":["import {\n\tCREATE_JOURNAL,\n\tGET_JOURNAL,\n\tGET_JOURNALS,\n\tDELETE_JOURNAL,\n\tUPDATE_JOURNAL,\n\tSIGN_IN,\n\tSIGN_OUT,\n\tTOGGLE_DARKMODE,\n\tGET_SETTINGS,\n\tSAVE_SETTINGS\n} from './types';\nimport history from '../history';\nimport journals from '@apis/journals';\nimport axios from 'axios';\n\nexport const signIn = (userInformation) => async (dispatch) => {\n\treturn { type: SIGN_IN, payload: userInformation };\n};\n\nexport const signOut = () => {\n\treturn { type: SIGN_OUT };\n};\n\nexport const createJournal = (formInput) => async (dispatch, getState) => {\n\tconst userId = getState().user.googleId;\n\tconst date = new Date().toLocaleString();\n\tconst { data } = await journals.post('/journals', {\n\t\t...formInput,\n\t\tuserId,\n\t\tdate,\n\t\tentries : []\n\t});\n\tdispatch({ type: CREATE_JOURNAL, payload: data });\n\thistory.push('/');\n};\n\nexport const getJournals = () => async (dispatch) => {\n\tconst { data } = await journals.get('/journals');\n\tconsole.log(data);\n\tdispatch({ type: GET_JOURNALS, payload: data });\n};\n\nexport const getJournal = (journalId) => async (dispatch) => {\n\tconst { data } = await journals.get(`/journals/${journalId}`);\n\tdispatch({ type: GET_JOURNAL, payload: data });\n};\n\nexport const deleteJournal = (journalId) => async (dispatch) => {\n\tawait journals.delete(`/journals/${journalId}`);\n\tdispatch({ type: DELETE_JOURNAL, payload: journalId });\n\thistory.push('/');\n};\n\nexport const updateJournal = (journalId, journal) => async (dispatch) => {\n\tconsole.log('values', journal);\n\tconst { data } = await journals.patch(`/journals/${journalId}`, journal);\n\tconsole.log('data: ', data);\n\tdispatch({ type: UPDATE_JOURNAL, payload: data.value });\n\thistory.push(`/journals/${journalId}`);\n};\n\nexport const toggleDarkMode = (mode) => {\n\treturn { type: TOGGLE_DARKMODE, payload: mode };\n};\n\nexport const getSettings = () => async (dispatch, getState) => {\n\tconst userId = getState().user.googleId;\n\tconst { data } = await journals.get(`/settings/${userId}`);\n\tdispatch({ type: GET_SETTINGS, payload: data.value });\n};\n\nexport const saveSettings = (settings) => async (dispatch, getState) => {\n\tconst userId = getState().user.googleId;\n\tconst { data } = await journals.put(`/settings/${userId}`, settings);\n\tdispatch({ type: SAVE_SETTINGS, payload: data.value });\n};\n"]},"metadata":{},"sourceType":"module"}