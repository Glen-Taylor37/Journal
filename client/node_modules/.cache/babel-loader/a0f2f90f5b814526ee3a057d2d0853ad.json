{"ast":null,"code":"var _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/Header/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { toggleDarkMode, getSettings } from '@actions';\nimport { LIGHT_THEME, DARK_THEME } from '@shared/colors';\nimport { NavButton, NavDropdown } from './styles';\nimport { Button } from '@shared/Button';\nimport Icon from '@shared/Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Settings extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.onSettingsClick = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.onThemeClick = () => {\n      const {\n        theme\n      } = this.props.settings;\n      this.props.toggleDarkMode(theme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getSettings();\n  }\n\n  renderDropdown() {\n    if (!this.state.isOpen) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(NavDropdown, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: this.onThemeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(NavButton, {\n      as: NavDropdown,\n      onClick: this.onSettingsClick,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: \"fas fa-cog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), \"Settings\", this.renderDropdown()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings,\n    userId: state.user.googleId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleDarkMode,\n  getSettings\n})(Settings);","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/Header/Settings.js"],"names":["React","connect","styled","toggleDarkMode","getSettings","LIGHT_THEME","DARK_THEME","NavButton","NavDropdown","Button","Icon","Settings","Component","state","isOpen","onSettingsClick","setState","onThemeClick","theme","props","settings","componentDidMount","renderDropdown","render","mapStateToProps","userId","user","googleId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,UAA5C;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,gBAAxC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,UAAvC;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACPC,MAAAA,MAAM,EAAG;AADF,KAD8B;;AAAA,SAStCC,eATsC,GASpB,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACA,KAXqC;;AAAA,SAatCG,YAbsC,GAavB,MAAM;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKC,KAAL,CAAWC,QAA7B;AACA,WAAKD,KAAL,CAAWhB,cAAX,CACCe,KAAK,KAAKb,WAAV,GAAwBC,UAAxB,GAAqCD,WADtC;AAGA,KAlBqC;AAAA;;AAKtCgB,EAAAA,iBAAiB,GAAG;AACnB,SAAKF,KAAL,CAAWf,WAAX;AACA;;AAaDkB,EAAAA,cAAc,GAAG;AAChB,QAAI,CAAC,KAAKT,KAAL,CAAWC,MAAhB,EAAwB;AACvB,aAAO,IAAP;AACA;;AAED,wBACC,QAAC,WAAD;AAAA,6BACC,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKG;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAEDM,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,SAAD;AAAW,MAAA,EAAE,EAAEf,WAAf;AAA4B,MAAA,OAAO,EAAE,KAAKO,eAA1C;AAAA,8BACC,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADD,cAEE,KAAKO,cAAL,EAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AAvCqC;;AA0CvC,MAAME,eAAe,GAAIX,KAAD,IAAW;AAClC,SAAO;AAAEO,IAAAA,QAAQ,EAAEP,KAAK,CAACO,QAAlB;AAA4BK,IAAAA,MAAM,EAAEZ,KAAK,CAACa,IAAN,CAAWC;AAA/C,GAAP;AACA,CAFD;;AAIA,eAAe1B,OAAO,CAACuB,eAAD,EAAkB;AAAErB,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAAlB,CAAP,CACdO,QADc,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { toggleDarkMode, getSettings } from '@actions';\nimport { LIGHT_THEME, DARK_THEME } from '@shared/colors';\nimport { NavButton, NavDropdown } from './styles';\nimport { Button } from '@shared/Button';\nimport Icon from '@shared/Icon';\n\nclass Settings extends React.Component {\n\tstate = {\n\t\tisOpen : false\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.getSettings();\n\t}\n\n\tonSettingsClick = () => {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t};\n\n\tonThemeClick = () => {\n\t\tconst { theme } = this.props.settings;\n\t\tthis.props.toggleDarkMode(\n\t\t\ttheme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME\n\t\t);\n\t};\n\n\trenderDropdown() {\n\t\tif (!this.state.isOpen) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<NavDropdown>\n\t\t\t\t<Button onClick={this.onThemeClick} />\n\t\t\t</NavDropdown>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<NavButton as={NavDropdown} onClick={this.onSettingsClick}>\n\t\t\t\t<Icon className=\"fas fa-cog\" />Settings\n\t\t\t\t{this.renderDropdown()}\n\t\t\t</NavButton>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { settings: state.settings, userId: state.user.googleId };\n};\n\nexport default connect(mapStateToProps, { toggleDarkMode, getSettings })(\n\tSettings\n);\n"]},"metadata":{},"sourceType":"module"}