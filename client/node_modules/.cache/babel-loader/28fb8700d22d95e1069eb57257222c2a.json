{"ast":null,"code":"var _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport { GridDiv, JournalDiv, EditorDiv, PostButton, EntriesDiv } from './styles';\nimport EntriesList from './EntriesList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass JournalShow extends React.Component {\n  //state = { activeEntryId: null };\n  constructor(props) {\n    super(props);\n\n    this.onPostClick = text => {\n      const {\n        journal\n      } = this.props;\n      this.props.updateJournal(journal._id, {\n        entries: [...journal.entries, {\n          date: this.date.toDateString(),\n          text\n        }]\n      });\n    };\n\n    this.onEntryClick = index => {//this.setState({ activeEntryId: index });\n    };\n\n    this.editor = null;\n    this.date = new Date();\n  }\n\n  componentDidMount() {\n    this.props.getJournal(this.props.match.params.id);\n  }\n\n  componentDidUpdate() {//this.addEditor();\n  }\n\n  addEditor() {\n    if (!this.editor) {\n      this.editorRoot = document.querySelector('#editor');\n\n      if (!this.state.readOnly) {\n        this.editor = editor(this.editorRoot);\n        this.editor.setText(`${this.props.journal.title}\\n${this.date.toLocaleDateString()}\\n${this.date.toLocaleTimeString()}`);\n      } else {}\n    }\n  }\n\n  renderEditor() {}\n\n  render() {\n    if (!this.props.journal) {\n      return null;\n    }\n\n    const {\n      journal\n    } = this.props;\n    const entry = journal.entries[this.props.match.params.entryId];\n    console.log('entry: ', entry);\n    return /*#__PURE__*/_jsxDEV(GridDiv, {\n      children: [/*#__PURE__*/_jsxDEV(EntriesList, {\n        onEntryClick: this.onEntryClick,\n        journal: journal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(EntryShow, {\n        journalId: journal._id,\n        text: entry ? entry.text : '',\n        onPostClick: this.onPostClick,\n        readOnly: entry !== undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    journal: state.journals[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJournal,\n  updateJournal\n})(JournalShow);","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js"],"names":["React","connect","getJournal","updateJournal","editor","readableEditor","EntryShow","GridDiv","JournalDiv","EditorDiv","PostButton","EntriesDiv","EntriesList","JournalShow","Component","constructor","props","onPostClick","text","journal","_id","entries","date","toDateString","onEntryClick","index","Date","componentDidMount","match","params","id","componentDidUpdate","addEditor","editorRoot","document","querySelector","state","readOnly","setText","title","toLocaleDateString","toLocaleTimeString","renderEditor","render","entry","entryId","console","log","undefined","mapStateToProps","ownProps","journals"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport {\n\tGridDiv,\n\tJournalDiv,\n\tEditorDiv,\n\tPostButton,\n\tEntriesDiv\n} from './styles';\n\nimport EntriesList from './EntriesList';\n\nclass JournalShow extends React.Component {\n\t//state = { activeEntryId: null };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.editor = null;\n\t\tthis.date = new Date();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getJournal(this.props.match.params.id);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t//this.addEditor();\n\t}\n\n\taddEditor() {\n\t\tif (!this.editor) {\n\t\t\tthis.editorRoot = document.querySelector('#editor');\n\t\t\tif (!this.state.readOnly) {\n\t\t\t\tthis.editor = editor(this.editorRoot);\n\n\t\t\t\tthis.editor.setText(\n\t\t\t\t\t`${this.props.journal\n\t\t\t\t\t\t.title}\\n${this.date.toLocaleDateString()}\\n${this.date.toLocaleTimeString()}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t}\n\t\t}\n\t}\n\n\tonPostClick = (text) => {\n\t\tconst { journal } = this.props;\n\t\tthis.props.updateJournal(journal._id, {\n\t\t\tentries : [\n\t\t\t\t...journal.entries,\n\t\t\t\t{\n\t\t\t\t\tdate : this.date.toDateString(),\n\t\t\t\t\ttext\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t};\n\n\tonEntryClick = (index) => {\n\t\t//this.setState({ activeEntryId: index });\n\t};\n\n\trenderEditor() {}\n\n\trender() {\n\t\tif (!this.props.journal) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { journal } = this.props;\n\t\tconst entry = journal.entries[this.props.match.params.entryId];\n\t\tconsole.log('entry: ', entry);\n\n\t\treturn (\n\t\t\t<GridDiv>\n\t\t\t\t<EntriesList\n\t\t\t\t\tonEntryClick={this.onEntryClick}\n\t\t\t\t\tjournal={journal}\n\t\t\t\t/>\n\t\t\t\t<EntryShow\n\t\t\t\t\tjournalId={journal._id}\n\t\t\t\t\ttext={entry ? entry.text : ''}\n\t\t\t\t\tonPostClick={this.onPostClick}\n\t\t\t\t\treadOnly={entry !== undefined}\n\t\t\t\t/>\n\t\t\t</GridDiv>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { journal: state.journals[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { getJournal, updateJournal })(\n\tJournalShow\n);\n"]},"metadata":{},"sourceType":"module"}