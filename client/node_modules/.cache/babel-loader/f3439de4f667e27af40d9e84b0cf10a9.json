{"ast":null,"code":"var _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/journals/JournalShow/EntryShow.js\";\nimport React from 'react';\nimport { JournalDiv, PostButton, StyledQuill } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toolbarOptions = [['bold', 'italic', 'underline', 'strike'], // toggled buttons\n['blockquote', 'code-block'], [{\n  header: 1\n}, {\n  header: 2\n}], // custom button values\n[{\n  list: 'ordered'\n}, {\n  list: 'bullet'\n}], [{\n  script: 'sub'\n}, {\n  script: 'super'\n}], // superscript/subscript\n[{\n  indent: '-1'\n}, {\n  indent: '+1'\n}], // outdent/indent\n[{\n  direction: 'rtl'\n}], // text direction\n[{\n  size: ['small', false, 'large', 'huge']\n}], // custom dropdown\n[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  color: []\n}, {\n  background: []\n}], // dropdown with defaults from theme\n[{\n  font: []\n}], [{\n  align: []\n}], ['clean'] // remove formatting button\n];\n\nclass EntryShow extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = value => {\n      this.setState({\n        text: value\n      });\n    };\n\n    this.renderPostButton = () => {\n      if (this.props.readOnly) {\n        return null;\n      }\n\n      return /*#__PURE__*/_jsxDEV(PostButton, {\n        onClick: () => this.props.onPostClick(this.state.text),\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.modules = {\n      toolbar: toolbarOptions\n    };\n    this.state = {\n      text: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.readOnly && this.state.text !== this.props.text) {\n      this.setState({\n        text: this.props.text\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    console.log('props.text: ', this.props.text);\n\n    if (this.props.readOnly && this.state.text !== this.props.text) {\n      this.setState({\n        text: this.props.text\n      });\n    }\n  }\n\n  render() {\n    console.log('value to render: ', this.state.text);\n    return /*#__PURE__*/_jsxDEV(JournalDiv, {\n      children: [/*#__PURE__*/_jsxDEV(StyledQuill, {\n        theme: this.props.readOnly ? 'bubble' : 'snow',\n        value: this.state.text,\n        onChange: this.handleChange,\n        modules: this.modules,\n        readOnly: this.props.readOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), this.renderPostButton()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default EntryShow;","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/journals/JournalShow/EntryShow.js"],"names":["React","JournalDiv","PostButton","StyledQuill","toolbarOptions","header","list","script","indent","direction","size","color","background","font","align","EntryShow","Component","constructor","props","handleChange","value","setState","text","renderPostButton","readOnly","onPostClick","state","modules","toolbar","componentDidMount","componentDidUpdate","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,WAAjC,QAAoD,UAApD;;AAEA,MAAMC,cAAc,GAAG,CACtB,CAAE,MAAF,EAAU,QAAV,EAAoB,WAApB,EAAiC,QAAjC,CADsB,EACuB;AAC7C,CAAE,YAAF,EAAgB,YAAhB,CAFsB,EAItB,CAAE;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAF,EAAiB;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAAjB,CAJsB,EAIY;AAClC,CAAE;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAF,EAAuB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAAvB,CALsB,EAMtB,CAAE;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAF,EAAqB;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAArB,CANsB,EAMsB;AAC5C,CAAE;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAF,EAAoB;AAAEA,EAAAA,MAAM,EAAE;AAAV,CAApB,CAPsB,EAOkB;AACxC,CAAE;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAF,CARsB,EAQI;AAE1B,CAAE;AAAEC,EAAAA,IAAI,EAAE,CAAE,OAAF,EAAW,KAAX,EAAkB,OAAlB,EAA2B,MAA3B;AAAR,CAAF,CAVsB,EAU6B;AACnD,CAAE;AAAEL,EAAAA,MAAM,EAAE,CAAE,CAAF,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,KAApB;AAAV,CAAF,CAXsB,EAatB,CAAE;AAAEM,EAAAA,KAAK,EAAE;AAAT,CAAF,EAAiB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAAjB,CAbsB,EAaiB;AACvC,CAAE;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAF,CAdsB,EAetB,CAAE;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAF,CAfsB,EAgBtB,CAAE,OAAF,CAhBsB,CAgBV;AAhBU,CAAvB;;AAmBA,MAAMC,SAAN,SAAwBf,KAAK,CAACgB,SAA9B,CAAwC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAsBnBC,YAtBmB,GAsBHC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF;AAAR,OAAd;AACA,KAxBkB;;AAAA,SA0BnBG,gBA1BmB,GA0BA,MAAM;AACxB,UAAI,KAAKL,KAAL,CAAWM,QAAf,EAAyB;AACxB,eAAO,IAAP;AACA;;AAED,0BACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAM,KAAKN,KAAL,CAAWO,WAAX,CAAuB,KAAKC,KAAL,CAAWJ,IAAlC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAKA,KApCkB;;AAElB,SAAKK,OAAL,GAAe;AACdC,MAAAA,OAAO,EAAGxB;AADI,KAAf;AAIA,SAAKsB,KAAL,GAAa;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAb;AACA;;AAEDO,EAAAA,iBAAiB,GAAG;AACnB,QAAI,KAAKX,KAAL,CAAWM,QAAX,IAAuB,KAAKE,KAAL,CAAWJ,IAAX,KAAoB,KAAKJ,KAAL,CAAWI,IAA1D,EAAgE;AAC/D,WAAKD,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AAAnB,OAAd;AACA;AACD;;AAEDQ,EAAAA,kBAAkB,GAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKd,KAAL,CAAWI,IAAvC;;AACA,QAAI,KAAKJ,KAAL,CAAWM,QAAX,IAAuB,KAAKE,KAAL,CAAWJ,IAAX,KAAoB,KAAKJ,KAAL,CAAWI,IAA1D,EAAgE;AAC/D,WAAKD,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI;AAAnB,OAAd;AACA;AACD;;AAkBDW,EAAAA,MAAM,GAAG;AACRF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,KAAKN,KAAL,CAAWJ,IAA5C;AACA,wBACC,QAAC,UAAD;AAAA,8BACC,QAAC,WAAD;AACC,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWM,QAAX,GAAsB,QAAtB,GAAiC,MADzC;AAEC,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWJ,IAFnB;AAGC,QAAA,QAAQ,EAAE,KAAKH,YAHhB;AAIC,QAAA,OAAO,EAAE,KAAKQ,OAJf;AAKC,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWM;AALtB;AAAA;AAAA;AAAA;AAAA,cADD,EAQE,KAAKD,gBAAL,EARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AArDsC;;AAwDxC,eAAeR,SAAf","sourcesContent":["import React from 'react';\n\nimport { JournalDiv, PostButton, StyledQuill } from './styles';\n\nconst toolbarOptions = [\n\t[ 'bold', 'italic', 'underline', 'strike' ], // toggled buttons\n\t[ 'blockquote', 'code-block' ],\n\n\t[ { header: 1 }, { header: 2 } ], // custom button values\n\t[ { list: 'ordered' }, { list: 'bullet' } ],\n\t[ { script: 'sub' }, { script: 'super' } ], // superscript/subscript\n\t[ { indent: '-1' }, { indent: '+1' } ], // outdent/indent\n\t[ { direction: 'rtl' } ], // text direction\n\n\t[ { size: [ 'small', false, 'large', 'huge' ] } ], // custom dropdown\n\t[ { header: [ 1, 2, 3, 4, 5, 6, false ] } ],\n\n\t[ { color: [] }, { background: [] } ], // dropdown with defaults from theme\n\t[ { font: [] } ],\n\t[ { align: [] } ],\n\t[ 'clean' ] // remove formatting button\n];\n\nclass EntryShow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.modules = {\n\t\t\ttoolbar : toolbarOptions\n\t\t};\n\n\t\tthis.state = { text: '' };\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.props.readOnly && this.state.text !== this.props.text) {\n\t\t\tthis.setState({ text: this.props.text });\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tconsole.log('props.text: ', this.props.text);\n\t\tif (this.props.readOnly && this.state.text !== this.props.text) {\n\t\t\tthis.setState({ text: this.props.text });\n\t\t}\n\t}\n\n\thandleChange = (value) => {\n\t\tthis.setState({ text: value });\n\t};\n\n\trenderPostButton = () => {\n\t\tif (this.props.readOnly) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<PostButton onClick={() => this.props.onPostClick(this.state.text)}>\n\t\t\t\tPost\n\t\t\t</PostButton>\n\t\t);\n\t};\n\n\trender() {\n\t\tconsole.log('value to render: ', this.state.text);\n\t\treturn (\n\t\t\t<JournalDiv>\n\t\t\t\t<StyledQuill\n\t\t\t\t\ttheme={this.props.readOnly ? 'bubble' : 'snow'}\n\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tmodules={this.modules}\n\t\t\t\t\treadOnly={this.props.readOnly}\n\t\t\t\t/>\n\t\t\t\t{this.renderPostButton()}\n\t\t\t</JournalDiv>\n\t\t);\n\t}\n}\n\nexport default EntryShow;\n"]},"metadata":{},"sourceType":"module"}