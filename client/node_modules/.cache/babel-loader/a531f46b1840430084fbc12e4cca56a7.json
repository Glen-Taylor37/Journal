{"ast":null,"code":"import _toConsumableArray from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport { GridDiv, JournalDiv, EditorDiv, PostButton, EntriesDiv } from './styles';\nimport EntriesList from './EntriesList';\n\nvar JournalShow = /*#__PURE__*/function (_React$Component) {\n  _inherits(JournalShow, _React$Component);\n\n  //state = { activeEntryId: null };\n  function JournalShow(props) {\n    var _this;\n\n    _classCallCheck(this, JournalShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JournalShow).call(this, props));\n\n    _this.onPostClick = function (text) {\n      var journal = _this.props.journal;\n\n      _this.props.updateJournal(journal._id, {\n        entries: [].concat(_toConsumableArray(journal.entries), [{\n          date: _this.date.toDateString(),\n          text: text\n        }])\n      });\n    };\n\n    _this.onEntryClick = function (index) {//this.setState({ activeEntryId: index });\n    };\n\n    _this.editor = null;\n    _this.date = new Date();\n    return _this;\n  }\n\n  _createClass(JournalShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getJournal(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {//this.addEditor();\n    }\n  }, {\n    key: \"addEditor\",\n    value: function addEditor() {\n      if (!this.editor) {\n        this.editorRoot = document.querySelector('#editor');\n\n        if (!this.state.readOnly) {\n          this.editor = editor(this.editorRoot);\n          this.editor.setText(\"\".concat(this.props.journal.title, \"\\n\").concat(this.date.toLocaleDateString(), \"\\n\").concat(this.date.toLocaleTimeString()));\n        } else {}\n      }\n    }\n  }, {\n    key: \"renderEditor\",\n    value: function renderEditor() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.journal) {\n        return null;\n      }\n\n      var journal = this.props.journal;\n      var entry = journal.entries[this.props.match.params.entryId];\n      console.log(entry);\n      return /*#__PURE__*/React.createElement(GridDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(EntriesList, {\n        onEntryClick: this.onEntryClick,\n        journal: journal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(EntryShow, {\n        journalId: journal._id,\n        entryText: entry.text,\n        onPostClick: this.onPostClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return JournalShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    journal: state.journals[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJournal: getJournal,\n  updateJournal: updateJournal\n})(JournalShow);","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js"],"names":["React","connect","getJournal","updateJournal","editor","readableEditor","EntryShow","GridDiv","JournalDiv","EditorDiv","PostButton","EntriesDiv","EntriesList","JournalShow","props","onPostClick","text","journal","_id","entries","date","toDateString","onEntryClick","index","Date","match","params","id","editorRoot","document","querySelector","state","readOnly","setText","title","toLocaleDateString","toLocaleTimeString","entry","entryId","console","log","Component","mapStateToProps","ownProps","journals"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport {\n\tGridDiv,\n\tJournalDiv,\n\tEditorDiv,\n\tPostButton,\n\tEntriesDiv\n} from './styles';\n\nimport EntriesList from './EntriesList';\n\nclass JournalShow extends React.Component {\n\t//state = { activeEntryId: null };\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.editor = null;\n\t\tthis.date = new Date();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getJournal(this.props.match.params.id);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t//this.addEditor();\n\t}\n\n\taddEditor() {\n\t\tif (!this.editor) {\n\t\t\tthis.editorRoot = document.querySelector('#editor');\n\t\t\tif (!this.state.readOnly) {\n\t\t\t\tthis.editor = editor(this.editorRoot);\n\n\t\t\t\tthis.editor.setText(\n\t\t\t\t\t`${this.props.journal\n\t\t\t\t\t\t.title}\\n${this.date.toLocaleDateString()}\\n${this.date.toLocaleTimeString()}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t}\n\t\t}\n\t}\n\n\tonPostClick = (text) => {\n\t\tconst { journal } = this.props;\n\t\tthis.props.updateJournal(journal._id, {\n\t\t\tentries : [\n\t\t\t\t...journal.entries,\n\t\t\t\t{\n\t\t\t\t\tdate : this.date.toDateString(),\n\t\t\t\t\ttext\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t};\n\n\tonEntryClick = (index) => {\n\t\t//this.setState({ activeEntryId: index });\n\t};\n\n\trenderEditor() {}\n\n\trender() {\n\t\tif (!this.props.journal) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { journal } = this.props;\n\t\tconst entry = journal.entries[this.props.match.params.entryId];\n\t\tconsole.log(entry);\n\n\t\treturn (\n\t\t\t<GridDiv>\n\t\t\t\t<EntriesList\n\t\t\t\t\tonEntryClick={this.onEntryClick}\n\t\t\t\t\tjournal={journal}\n\t\t\t\t/>\n\t\t\t\t<EntryShow\n\t\t\t\t\tjournalId={journal._id}\n\t\t\t\t\tentryText={entry.text}\n\t\t\t\t\tonPostClick={this.onPostClick}\n\t\t\t\t/>\n\t\t\t</GridDiv>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { journal: state.journals[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { getJournal, updateJournal })(\n\tJournalShow\n);\n"]},"metadata":{},"sourceType":"module"}