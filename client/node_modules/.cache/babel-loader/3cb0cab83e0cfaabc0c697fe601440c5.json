{"ast":null,"code":"import _toConsumableArray from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/manjam/Portfolio/journal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport { GridDiv, JournalDiv, EditorDiv, PostButton, EntriesDiv } from './styles';\nimport EntriesList from './EntriesList';\n\nvar JournalShow = /*#__PURE__*/function (_React$Component) {\n  _inherits(JournalShow, _React$Component);\n\n  function JournalShow(props) {\n    var _this;\n\n    _classCallCheck(this, JournalShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(JournalShow).call(this, props));\n\n    _this.onPostClick = function () {\n      var journal = _this.props.journal;\n\n      _this.props.updateJournal(journal._id, {\n        entries: [].concat(_toConsumableArray(journal.entries), [{\n          date: _this.date.toDateString(),\n          content: _this.editor.getContents()\n        }])\n      });\n    };\n\n    _this.onEntryClick = function (index) {\n      console.log('got it', index);\n    };\n\n    _this.editor = null;\n    _this.date = new Date();\n    return _this;\n  }\n\n  _createClass(JournalShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getJournal(this.props.match.params.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {//this.addEditor();\n    }\n  }, {\n    key: \"addEditor\",\n    value: function addEditor() {\n      if (!this.editor) {\n        this.editorRoot = document.querySelector('#editor');\n\n        if (!this.state.readOnly) {\n          this.editor = editor(this.editorRoot);\n          this.editor.setText(\"\".concat(this.props.journal.title, \"\\n\").concat(this.date.toLocaleDateString(), \"\\n\").concat(this.date.toLocaleTimeString()));\n        } else {}\n      }\n    }\n  }, {\n    key: \"renderEditor\",\n    value: function renderEditor() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.journal) {\n        return null;\n      }\n\n      return /*#__PURE__*/React.createElement(GridDiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(EntriesList, {\n        onEntryClick: this.onEntryClick,\n        journal: this.props.journal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(EntryShow, {\n        journal: this.props.journal,\n        entryId: this.props.match.params.entryId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return JournalShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    journal: state.journals[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getJournal: getJournal,\n  updateJournal: updateJournal\n})(JournalShow);","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/src/components/journals/JournalShow/index.js"],"names":["React","connect","getJournal","updateJournal","editor","readableEditor","EntryShow","GridDiv","JournalDiv","EditorDiv","PostButton","EntriesDiv","EntriesList","JournalShow","props","onPostClick","journal","_id","entries","date","toDateString","content","getContents","onEntryClick","index","console","log","Date","match","params","id","editorRoot","document","querySelector","state","readOnly","setText","title","toLocaleDateString","toLocaleTimeString","entryId","Component","mapStateToProps","ownProps","journals"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { getJournal, updateJournal } from '../../../actions';\nimport editor, { readableEditor } from '../../../apis/editor';\nimport EntryShow from './EntryShow';\nimport {\n\tGridDiv,\n\tJournalDiv,\n\tEditorDiv,\n\tPostButton,\n\tEntriesDiv\n} from './styles';\n\nimport EntriesList from './EntriesList';\n\nclass JournalShow extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.editor = null;\n\t\tthis.date = new Date();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.getJournal(this.props.match.params.id);\n\t}\n\n\tcomponentDidUpdate() {\n\t\t//this.addEditor();\n\t}\n\n\taddEditor() {\n\t\tif (!this.editor) {\n\t\t\tthis.editorRoot = document.querySelector('#editor');\n\t\t\tif (!this.state.readOnly) {\n\t\t\t\tthis.editor = editor(this.editorRoot);\n\n\t\t\t\tthis.editor.setText(\n\t\t\t\t\t`${this.props.journal\n\t\t\t\t\t\t.title}\\n${this.date.toLocaleDateString()}\\n${this.date.toLocaleTimeString()}`\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t}\n\t\t}\n\t}\n\n\tonPostClick = () => {\n\t\tconst { journal } = this.props;\n\t\tthis.props.updateJournal(journal._id, {\n\t\t\tentries : [\n\t\t\t\t...journal.entries,\n\t\t\t\t{\n\t\t\t\t\tdate    : this.date.toDateString(),\n\t\t\t\t\tcontent : this.editor.getContents()\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t};\n\n\tonEntryClick = (index) => {\n\t\tconsole.log('got it', index);\n\t};\n\n\trenderEditor() {}\n\n\trender() {\n\t\tif (!this.props.journal) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<GridDiv>\n\t\t\t\t<EntriesList\n\t\t\t\t\tonEntryClick={this.onEntryClick}\n\t\t\t\t\tjournal={this.props.journal}\n\t\t\t\t/>\n\t\t\t\t<EntryShow\n\t\t\t\t\tjournal={this.props.journal}\n\t\t\t\t\tentryId={this.props.match.params.entryId}\n\t\t\t\t/>\n\t\t\t</GridDiv>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn { journal: state.journals[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { getJournal, updateJournal })(\n\tJournalShow\n);\n"]},"metadata":{},"sourceType":"module"}