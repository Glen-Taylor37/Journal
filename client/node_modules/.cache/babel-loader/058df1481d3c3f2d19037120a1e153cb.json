{"ast":null,"code":"var _jsxFileName = \"/home/manjam/Portfolio/journal/client/src/components/Header/Settings.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { toggleDarkMode, getSettings } from '@actions';\nimport { LIGHT_THEME, DARK_THEME } from '@shared/colors';\nimport { NavButton } from './styles';\nimport { Button } from '@shared/Button';\nimport Icon from '@shared/Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavDropdown = styled.div`\n\tposition: absolute;\n\tborder: none;\n\toutline: none;\n\tbox-shadow: none;\n\ttext-decoration: none;\n\twidth: 100%;\n\tcolor: ${props => props.theme.foreText};\n\tbackground-color: ${props => props.theme.foreground};\n\tbox-shadow: 0px 2px 4px 2px ${props => props.theme.foregroundShadow};\n\n\t&:hover {\n\t\tbackground-color: ${props => props.theme.buttonHover};\n\t}\n`;\n_c = NavDropdown;\nconst DropDownContainer = styled.div`\n\tposition: relative;\n\tpadding: 1px 6px 1px 6px;\n\theight: 100%;\n\twidth: 100%;\n\tborder: none;\n\toutline: none;\n\tbox-shadow: none;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tdisplay: inline;\n\ttext-decoration: none;\n\tcolor: ${props => props.theme.foreText};\n\tbackground-color: ${props => props.theme.foreground};\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground-color: ${props => props.theme.buttonHover};\n\t}\n`;\n_c2 = DropDownContainer;\n\nclass Settings extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: false\n    };\n\n    this.onSettingsClick = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.onThemeClick = () => {\n      const {\n        theme\n      } = this.props.settings;\n      this.props.toggleDarkMode(theme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getSettings();\n  }\n\n  renderDropdown() {\n    if (!this.state.isOpen) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(NavDropdown, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onThemeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DropDownContainer, {\n      onClick: this.onSettingsClick,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: \"fas fa-cog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), \"Settings\", this.renderDropdown()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    settings: state.settings,\n    userId: state.user.googleId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleDarkMode,\n  getSettings\n})(Settings);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavDropdown\");\n$RefreshReg$(_c2, \"DropDownContainer\");","map":{"version":3,"sources":["/home/manjam/Portfolio/journal/client/src/components/Header/Settings.js"],"names":["React","connect","styled","toggleDarkMode","getSettings","LIGHT_THEME","DARK_THEME","NavButton","Button","Icon","NavDropdown","div","props","theme","foreText","foreground","foregroundShadow","buttonHover","DropDownContainer","Settings","Component","state","isOpen","onSettingsClick","setState","onThemeClick","settings","componentDidMount","renderDropdown","render","mapStateToProps","userId","user","googleId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { toggleDarkMode, getSettings } from '@actions';\nimport { LIGHT_THEME, DARK_THEME } from '@shared/colors';\nimport { NavButton } from './styles';\nimport { Button } from '@shared/Button';\nimport Icon from '@shared/Icon';\n\nconst NavDropdown = styled.div`\n\tposition: absolute;\n\tborder: none;\n\toutline: none;\n\tbox-shadow: none;\n\ttext-decoration: none;\n\twidth: 100%;\n\tcolor: ${(props) => props.theme.foreText};\n\tbackground-color: ${(props) => props.theme.foreground};\n\tbox-shadow: 0px 2px 4px 2px ${(props) => props.theme.foregroundShadow};\n\n\t&:hover {\n\t\tbackground-color: ${(props) => props.theme.buttonHover};\n\t}\n`;\n\nconst DropDownContainer = styled.div`\n\tposition: relative;\n\tpadding: 1px 6px 1px 6px;\n\theight: 100%;\n\twidth: 100%;\n\tborder: none;\n\toutline: none;\n\tbox-shadow: none;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tdisplay: inline;\n\ttext-decoration: none;\n\tcolor: ${(props) => props.theme.foreText};\n\tbackground-color: ${(props) => props.theme.foreground};\n\tcursor: pointer;\n\n\t&:hover {\n\t\tbackground-color: ${(props) => props.theme.buttonHover};\n\t}\n`;\n\nclass Settings extends React.Component {\n\tstate = {\n\t\tisOpen : false\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.getSettings();\n\t}\n\n\tonSettingsClick = () => {\n\t\tthis.setState({ isOpen: !this.state.isOpen });\n\t};\n\n\tonThemeClick = () => {\n\t\tconst { theme } = this.props.settings;\n\t\tthis.props.toggleDarkMode(\n\t\t\ttheme === LIGHT_THEME ? DARK_THEME : LIGHT_THEME\n\t\t);\n\t};\n\n\trenderDropdown() {\n\t\tif (!this.state.isOpen) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<NavDropdown>\n\t\t\t\t<button onClick={this.onThemeClick} />\n\t\t\t</NavDropdown>\n\t\t);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<DropDownContainer onClick={this.onSettingsClick}>\n\t\t\t\t<Icon className=\"fas fa-cog\" />Settings\n\t\t\t\t{this.renderDropdown()}\n\t\t\t</DropDownContainer>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn { settings: state.settings, userId: state.user.googleId };\n};\n\nexport default connect(mapStateToProps, { toggleDarkMode, getSettings })(\n\tSettings\n);\n"]},"metadata":{},"sourceType":"module"}